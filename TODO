- do opisu algorytmów, w seksji opis dodaæ opis linijki, która jest odpowiedzialna za wyjœcie z pêtli

- przerobiæ opisy algorytmów, bez znaków w opisie ogólnym, tylko ogólna koncepcja

- przygotowac plik z testowymi tablicami oraz ich rozmiarami, pusta tablica, talica tych samuch liczb, przypadki graniczne, ostatnia niepasujaca, 

- bubble sort rekursja ogonowa
- insertion sort rekursja ogonowa
- selection sort rekursja ogonowa

- testowac czy algorytm dobrze sortuje bez flagi NDEBUG
- testowac czas sortowania z flaga NDEBUG

- asercja, czy tablica wynikowa zawiera te same elementy, np sumowac elementy obydwu tablic, uwaga na overflow!

- skrypt instalacyjny (rownoczescie spis uzywanych bibliotek)


SHELL SORT
- algorytm jest ulepszona wersja insertion sort, wykorzystujemy fakt, ze
dla optymistycznego przypadku insertion sort wykonuje sie w czasie O(n)

- rozwa¿yæ opcjê u¿ycia wrappera array<int> zamiast int[], mo¿liwoœæ u¿ycia asercji

- rozwazyc dodanie gap do bubble sort
- rozwazyc dodanie gap do insertion_sort
- rozwazyc dodanie swapped do bubble sort

- implementacja std::sort

- dodac pivot_selector -> wyszukuje pivota oraz, jesli to konieczne, zamienia miejscami elementy
- simple_pivot_selector
- median_of_three_pivot_selector
- dual_pivot_selector
- simple_sual_pivot_selector
- Library sort, or gapped insertion sort
- Timsort (sortowanie typów obiektowych w javie wykorzystuje algorytm TimSort)

- usunac tworzenie binary_max_heap w intro_sort